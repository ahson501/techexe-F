version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: tech_data
    environment:
      POSTGRES_USER: node-1
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: tech_db
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/var/lib/postgresql/backups
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: techexe.net@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - pgadmin-postfix-config:/etc/postfix
      - /home/node-1/techexe/config.py:/pgadmin4/config.py
    networks:
      - app-network

  web:
    build: .
    container_name: tech_web
    command: gunicorn --bind 0.0.0.0:8000 techexeapp.wsgi:application
    ports:
      - "8000:8000"
    depends_on:
      - db
      - vite
      - elasticsearch
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://node-1:12345678@db:5432/tech_db
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=aitechexe.net@gmail.com
      - EMAIL_HOST_PASSWORD=lycsxkhtlfgqfghx # Your Gmail password or app password
      - DEFAULT_FROM_EMAIL=aitechexe.net@gmail.com
    volumes:
      - .:/app
      - /app/venv
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./frontend/static:/app/frontend/static
    networks:
      - app-network

  vite:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"  # Ensure the correct port is mapped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web  # Make sure it depends on the web service
      - certbot
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"
      
 
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8082:8080"
    restart: always
    privileged: true
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  postgres_backups:
  pgadmin_data:
  pgadmin-postfix-config:
  static_volume:
  media_volume:
  cadvisor_data:  # Define the volume for persistent storage
  elasticsearch_data:

networks:
  app-network:
    driver: bridge