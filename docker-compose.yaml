version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: tech_data
    environment:
      POSTGRES_USER: node-1
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: tech_db
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/var/lib/postgresql/backups
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: techexe.net@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - pgadmin-postfix-config:/etc/postfix
      - /home/node-1/techexe/config.py:/pgadmin4/config.py
    networks:
      - app-network

  web:
    build: .
    container_name: tech_web
    command: gunicorn --bind 0.0.0.0:8000 techexeapp.wsgi:application
    ports:
      - "8000:8000"
    depends_on:
      - db
      - vite
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://node-1:12345678@db:5432/tech_db
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=techexe.net@gmail.com
      - EMAIL_HOST_PASSWORD=qyjxqfxvnuziigrd  # Your Gmail password or app password
      - DEFAULT_FROM_EMAIL=techexe.net@gmail.com
    volumes:
      - .:/app
      - /app/venv
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./frontend/static:/app/frontend/static
    networks:
      - app-network

  vite:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"  # Ensure the correct port is mapped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "900:80"
      - "443:443"
    depends_on:
      - web  # Make sure it depends on the web service
      - certbot
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana   # For Grafana data (dashboards, etc.)
      - ./grafana_config:/etc/grafana   # Persist config files (including grafana.ini)
    depends_on:
      - db
    networks:
      - app-network

volumes:
  postgres_data:
  postgres_backups:
  pgadmin_data:
  pgadmin-postfix-config:
  static_volume:
  media_volume:
  grafana_data:
  grafana_config:

networks:
  app-network:
    driver: bridge